
package bitcamp.java110.cms.dao.impl;

import org.apache.ibatis.session.SqlSessionFactory;

import bitcamp.java110.cms.dao.MemberDao;
import bitcamp.java110.cms.domain.Member;

public class MemberMysqlDao implements MemberDao {

    SqlSessionFactory sqlSessionFactory;

    public void setSqlSessionFactory(SqlSessionFactory sqlSessionFactory) {
        this.sqlSessionFactory = sqlSessionFactory;
    }

    @Override
    public int insert(Member member){
        /*PreparedStatement stmt = null;
        Connection con =null;
        
        try {
            con = dataSource.getConnection();
            String sql = "insert into p1_memb(name,email,pwd,tel,cdt)"
                    + " values(?,?,password(?),?,now())";
            
            stmt = con.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);
            stmt.setString(1,member.getName());
            stmt.setString(2,member.getEmail());
            stmt.setString(3,member.getPassword());
            stmt.setString(4,member.getTel());
            stmt.executeUpdate();

            ResultSet autogeneratedKeys = stmt.getGeneratedKeys();
            autogeneratedKeys.next();
            
            int no = autogeneratedKeys.getInt(1);
            autogeneratedKeys.close();
            member.setNo(no);
            
            return 1;
            
        } catch (Exception e) {
            throw new DaoException(e);

        } finally {
            try {stmt.close();} catch (Exception e) {}
            dataSource.returnConnection(con);
        }*/
        return 0;
    }
    
    @Override
    public int delete(int no){
        /*Connection con = null;
        PreparedStatement stmt = null;

        try {
            con = dataSource.getConnection();
            String sql = "delete from p1_memb where mno=?";
            stmt = con.prepareStatement(sql);
            stmt.setInt(1,no);
            
            return stmt.executeUpdate();

        } catch (Exception e) {
            throw new DaoException(e);

        } finally {
            try {stmt.close();} catch (Exception e) {}
            dataSource.returnConnection(con);
        }*/
        return 0;
    }
}