<?xml version="1.0" encoding="UTF-8"?>
<!-- MemberDao 클래스가 사용할 SQL이 들어 있는 파일 -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberdao">

 <!-- 컬럼명과 자바 객체의 프로퍼티명이 다를 경우,
             컬럼명에 대해 프로퍼티 이름과 같게 별명을 지정해야만
             제대로 DB 컬럼 값이 객체에 저장된다.
             그러나 매번 select를 실행할 때 마다 컬럼에 대해 별명을 지정하는 것은 
             매우 불편하고 번거로운 일이다.
             이를 해결하기 위해 다음 태그를 사용한다.
             즉 컬럼과 프로퍼티를 맺어두는 선언이다. -->
 <resultMap type="member" id="memberMap">
    <id column = "mno" property="no"/> <!-- primary키 컬럼인 경우 태그를 id라고 해야함 -->
    <result column = "name" property="name"/>
    <result column = "email" property="email"/>
    <result column = "tel" property="tel"/>
 </resultMap>

<!-- 여러 곳에서 공통으로 사용하는 SQL 문이 있다면
           다음과 같이 별도로 정의해 놓고 필요한 곳에서 삽입한다. -->
 <sql id="select1">
 select 
     m.mno, 
     m.name, 
     m.email, 
     m.tel
 </sql>

  <!-- SQL을 작성할 SQL의 id는 가능한 DAO의 메서드명과 같게 하라!
               나중에 유지보수할 때 찾기 쉽다. mno로 두면 setmno가없어서 no값이 안나옴 그래서 별명을써서 no를 넣도록해야함-->
  <select id="findAll" resultMap="memberMap">
   <include refid="select1"></include>
   from p1_memb m 
  </select>
  
  <select id="findByNo" resultMap="memberMap" parameterType="int">
   <include refid="select1"></include>
   from p1_memb m 
   where mno=#{value} <!-- value말고 아무거나 할수있음 -->
  </select>
  
  <insert id="insert" parameterType="member"
  useGeneratedKeys="true" keyColumn="mno" keyProperty="no">
    insert into p1_memb(name,email,pwd,tel,cdt)
    values(#{name},#{email},password(#{password}),#{tel},now())
  </insert>
  
  <delete id="delete" parameterType="int">
    delete from p1_memb 
    where mno=#{no}
  </delete>
</mapper>